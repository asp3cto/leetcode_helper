version: "3.9"
services:
  postgres:
    image: postgres:14.5
    container_name: postgres
    environment:
      POSTGRES_DB: "auth"
      POSTGRES_USER: "auth"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
    ports:
      - "${POSTGRES_PORT}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d auth -U auth"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - backend-services

  mongo:
    image: mongo:7.0
    container_name: mongo
    environment:
      MONGO_INITDB_DATABASE: "problems"
      MONGO_INITDB_ROOT_USERNAME: "problems"
      MONGO_INITDB_ROOT_PASSWORD: ${MONGODB_PASSWORD}
    ports:
      - "${MONGODB_PORT}:27017"
    networks:
      - backend-services

  mongo-express:
    image: mongo-express
    container_name: mongo-express
    restart: always
    ports:
      - "28081:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: "problems"
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGODB_PASSWORD}
      ME_CONFIG_MONGODB_URL: mongodb://problems:${MONGODB_PASSWORD}@mongo:27017/ 
    depends_on:
      - mongo
    networks:
    - backend-services

  info_server:
    build:
      context: .
      dockerfile: Dockerfile.info
    container_name: info_server
    environment:
      - MONGODB_PASSWORD=${MONGODB_PASSWORD}
    depends_on:
      - auth_server
    volumes:
      - ./info_server:/info_server
    # ports:
    #   - "8111:8000"
    networks:
      - backend-services
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.info_server.rule=PathPrefix(`/info`)"
      - "traefik.http.services.info_server.loadbalancer.server.port=8000"
      - "traefik.http.routers.info_server.middlewares=info-stripprefix"
      - "traefik.http.middlewares.info-stripprefix.stripprefix.prefixes=/info"

  auth_server:
    build:
      context: .
      dockerfile: Dockerfile.auth
    container_name: auth_server
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    env_file:
      - .env.auth
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./auth_server:/auth_server
    # ports:
    #   - "8222:8000"
    networks:
      - backend-services
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.auth_server.rule=PathPrefix(`/auth`)"
      - "traefik.http.services.auth_server.loadbalancer.server.port=8000"
      - "traefik.http.routers.auth_server.middlewares=auth-stripprefix"
      - "traefik.http.middlewares.auth-stripprefix.stripprefix.prefixes=/auth"
  
  traefik:
    image: "traefik:latest"
    container_name: traefik
    ports:
      - "9999:80"
      - "8080:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "$PWD/traefik.toml:/etc/traefik/traefik.toml"
    networks:
      - backend-services
  
networks:
    backend-services:
