version: "3.9"
services:
  postgres:
    image: postgres:14.5
    container_name: postgres
    environment:
      POSTGRES_DB: "auth"
      POSTGRES_USER: "auth"
      POSTGRES_PASSWORD: "qwerty"
    ports:
      - "5555:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d auth -U auth"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - auth-services

  info_server:
    build:
      context: .
      dockerfile: Dockerfile.info
    container_name: info_server
    depends_on:
      - auth_server
    volumes:
      - ./info_server:/info_server
    # ports:
    #   - "8080:8000"
    networks:
      - backend-services
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.info_server.rule=PathPrefix(`/info`)"
      - "traefik.http.services.info_server.loadbalancer.server.port=8000" 

  auth_server:
    build:
      context: .
      dockerfile: Dockerfile.auth
    container_name: auth_server
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./auth_server:/auth_server
    # ports:
    #   - "8081:8000"
    networks:
      - auth-services
      - backend-services
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.auth_server.rule=PathPrefix(`/auth`)"
      - "traefik.http.services.auth_server.loadbalancer.server.port=8000" 
  
  traefik:
    image: "traefik:latest"
    container_name: traefik
    command:
    # NOTE: DISABLE IN PROD
      - "--api.insecure=true"
      - "--api.dashboard=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    networks:
      - auth-services
      - backend-services
  
networks:
    backend-services:
    auth-services:
